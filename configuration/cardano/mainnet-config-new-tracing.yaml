################################################################################
# Mainnet Cardano Node Configuration

##### Locations #####

AlonzoGenesisFile: mainnet-alonzo-genesis.json
AlonzoGenesisHash: 7e94a15f55d1e82d10f09203fa1d40f8eede58fd8066542cf6566008068ed874
ByronGenesisFile: mainnet-byron-genesis.json
ByronGenesisHash: 5f20df933584822601f9e3f8c024eb5eb252fe8cefb24d1317dc3d432e940ebb
ShelleyGenesisFile: mainnet-shelley-genesis.json
ShelleyGenesisHash: 1a3be38bcbb7911969283716ad7aa550250226b76a61fc51cc9a9a35d9276d81

##### Core protocol parameters #####

Protocol: Cardano

# The mainnet does not include the network magic into addresses. Testnets do.
RequiresNetworkMagic: RequiresNoMagic

##### Update system parameters #####

# This protocol version number gets used by block producing nodes as part
# of the system for agreeing on and synchronising protocol updates.
#
# See https://github.com/input-output-hk/cardano-node/blob/master/cardano-node/src/Cardano/Node/Protocol/Cardano.hs#L199
LastKnownBlockVersion-Major: 3
LastKnownBlockVersion-Minor: 0
LastKnownBlockVersion-Alt: 0
MaxKnownMajorProtocolVersion: 2

# In the Byron era some software versions are also published on the chain.
# We do this only for Byron compatibility now.
ApplicationName: cardano-sl
ApplicationVersion: 1

##### Logging configuration #####

# Enable or disable logging overall
TurnOnLogging: True

##### New logging model #####
# Options for new tracing

# Use old tracing as standard for now
UseTraceDispatcher: True

TraceOptions:
  Node:
    severity: Notice
    detail: DNormal
    backends:
      - Stdout MachineFormat
      - EKGBackend
      - Forwarder

# More interesing tracers

  Node.ChainDB:
    severity: Info

  Node.AcceptPolicy:
    severity: Info

  Node.DNSResolver:
    severity: Info

  Node.DNSSubscription:
    severity: Info

  Node.DiffusionInit:
    severity: Info

  Node.ErrorPolicy:
    severity: Info

  Node.Forge:
    severity: Info

  Node.IpSubscription:
    severity: Info

  Node.LocalErrorPolicy:
    severity: Info

  Node.Mempool:
    severity: Info

  Node.Resources:
    severity: Info

#-------------------------------------------------------------------
# Metric tracers
#carry metrics blocksForgedNum
  Node.ReplayBlock.LedgerReplay:
    severity: Info


# carry metrics blocksForgedNum, nodeCannotForgeNum, nodeIsLeaderNum, slotsMissed
#  nodeCannotForgeNum.
  Node.ForgeStats:
    severity: Info


# carry metrics cardano.node.aboutToLeadSlotLast
  Node.Forge.StartLeadershipCheck:
    severity: Info


# carry metrics cardano.node.aboutToLeadSlotLast, cardano.node.adoptedSlotLast
#   cardano.node.delegMapSize
#   cardano.node.utxoSize
  Node.Forge.StartLeadershipCheckPlus:
    severity: Info


# carry metrics cardano.node.adoptedSlotLast
  Node.Forge.AdoptedBlock:
    severity: Info


# carry metrics cardano.node.blockContext
  Node.Forge.BlockContext:
    severity: Info


# carry metrics cardano.node.blockFromFuture
  Node.Forge.BlockFromFuture:
    severity: Info


# carry metrics cardano.node.blocks, cardano.node.density
#   cardano.node.epoch
#    cardano.node.slotInEpoch
#    cardano.node.slots
  Node.ChainDB.AddBlockEvent.AddedToCurrentChain:
    severity: Info


# carry metrics cardano.node.blocks, cardano.node.density
#   cardano.node.epoch
#    cardano.node.slotInEpoch
#    cardano.node.slots
  Node.ChainDB.AddBlockEvent.SwitchedToAFork:
    severity: Info


# carry metrics cardano.node.connectedPeers
  Node.BlockFetchDecision:
    severity: Info


# carry metrics cardano.node.connectionManager.duplexConns
#  cardano.node.connectionManager.fullDuplexConns
#  cardano.node.connectionManager.inboundConns
#  cardano.node.connectionManager.outboundConns
#  cardano.node.connectionManager.unidirectionalConns
  Node.ConnectionManager.ConnectionManagerCounters:
    severity: Info


# carry metrics cardano.node.connectionManager.duplexConns
#  cardano.node.connectionManager.fullDuplexConns
#  cardano.node.connectionManager.inboundConns
#  cardano.node.connectionManager.outboundConns
#  cardano.node.connectionManager.unidirectionalConns
  Node.LocalConnectionManager.ConnectionManagerCounters:
    severity: Info


# carry metrics cardano.node.couldNotForgeSlotLast
  Node.Forge.NoLedgerState:
    severity: Info


# carry metrics cardano.node.couldNotForgeSlotLast
  Node.Forge.NoLedgerView:
    severity: Info


# carry metrics cardano.node.currentKESPeriod
#   cardano.node.operationalCertificateExpiryKESPeriod
#   cardano.node.operationalCertificateStartKESPeriod
#   cardano.node.remainingKESPeriods
  Node.Forge.ForgeStateUpdateError:
    severity: Info


# carry metrics cardano.node.forgedInvalidSlotLast
  Node.Forge.ForgedInvalidBlock:
    severity: Info


# carry metrics cardano.node.forgedSlotLast
  Node.Forge.ForgedBlock:
    severity: Info


# carry metrics cardano.node.inbound-governor.cold
#   cardano.node.inbound-governor.hot
#   cardano.node.inbound-governor.idle
#   cardano.node.inbound-governor.warm
  Node.InboundGovernor.InboundGovernorCounters:
    severity: Info


# carry metrics cardano.node.inbound-governor.cold
#   cardano.node.inbound-governor.hot
#   cardano.node.inbound-governor.idle
#   cardano.node.inbound-governor.warm
  Node.LocalInboundGovernor.InboundGovernorCounters:
    severity: Info


# carry metrics cardano.node.ledgerState
  Node.Forge.LedgerState:
    severity: Info


# carry metrics cardano.node.ledgerView
  Node.Forge.LedgerView:
    severity: Info


# carry metrics cardano.node.mempoolBytes
#   cardano.node.txsInMempool
  Node.Mempool.AddedTx:
    severity: Info


# carry metrics cardano.node.mempoolBytes
#   cardano.node.txsInMempool
#   cardano.node.txsProcessedNum
  Node.Mempool.ManuallyRemovedTxs:
    severity: Info


# carry metrics cardano.node.mempoolBytes
#   cardano.node.txsInMempool
  Node.Mempool.RejectedTx:
    severity: Info


# carry metrics cardano.node.mempoolBytes
  Node.Mempool.RemoveTxs:
    severity: Info


# carry metrics cardano.node.metrics.served.header
  Node.ChainSyncServerHeader.ChainSyncServerEvent.ServerRead.RollBackward:
    severity: Info


# carry metrics cardano.node.metrics.served.header
  Node.ChainSyncServerHeader.ChainSyncServerEvent.ServerRead.RollForward:
    severity: Info


# carry metrics cardano.node.metrics.served.header
  Node.ChainSyncServerHeader.ChainSyncServerEvent.ServerRead.ServerRead:
    severity: Info


# carry metrics cardano.node.metrics.served.header
  Node.ChainSyncServerHeader.ChainSyncServerEvent.ServerRead.ServerReadBlocked:
    severity: Info


# carry metrics cardano.node.nodeCannotForge
  Node.Forge.NodeCannotForge:
    severity: Info


# carry metrics cardano.node.nodeIsLeader
  Node.Forge.NodeIsLeader:
    severity: Info


# carry metrics cardano.node.nodeNotLeader
  Node.Forge.NodeNotLeader:
    severity: Info


# carry metrics cardano.node.notAdoptedSlotLast
  Node.Forge.DidntAdoptBlock:
    severity: Info


# carry metrics cardano.node.peerSelection.cold
#   cardano.node.peerSelection.hot
#   cardano.node.peerSelection.warm
  Node.PeerSelectionCounters.PeerSelectionCounters:
    severity: Info


# carry metrics cardano.node.served.block
  Node.BlockFetchServer.SendBlock:
    severity: Info

# carry metrics cardano.node.slotIsImmutable
  Node.Forge.SlotIsImmutable:
    severity: Info

# carry metrics cardano.node.submissions.accepted
#   cardano.node.submissions.rejected
  Node.TxInbound.TxSubmissionProcessed:
    severity: Info

# carry metrics cardano.node.submissions.submitted
  Node.TxInbound.TxSubmissionCollected:
    severity: Info

# carry metrics mem.resident, rts.gcLiveBytes, rts.gcMajorNum, rts.gcMinorNum
#  rts.gcticks, rts.mutticks, rts.threads, stat.cputicks
  Node.Resources:
    severity: Info

# carry metrics peersFromNodeKernel
  Node.Peers:
    severity: Info

#---------------------------
# Frequency limited tracer
  Node.ChainDB.AddBlockEvent.AddedBlockToQueue:
    maxFrequency: 2.0

  Node.ChainDB.AddBlockEvent.AddedBlockToVolatileDB:
    maxFrequency: 2.0

  Node.ChainDB.CopyToImmutableDBEvent.CopiedBlockToImmutableDB:
    maxFrequency: 2.0

  Node.ChainDB.AddBlockEvent.AddBlockValidation.ValidCandidate:
    maxFrequency: 2.0

  Node.BlockFetchClient.CompletedBlockFetch:
    maxFrequency: 2.0

# Options for the trace forwarder
TraceOptionForwarder:
    address:
      filePath: /tmp/forwarder.sock
    mode: Initiator

TraceOptionPeerFrequency: 2000

TraceOptionResourceFrequency: 5000


##### Stubs for legacy logging config #####

TurnOnLogMetrics: False
minSeverity: Critical
setupScribes: []
setupBackends: []
defaultScribes: []
defaultBackends: []
options: {}
